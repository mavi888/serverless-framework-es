# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: foobar
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: test

# "service" is the name of this project. This will also be added to your AWS resource names.
service: pizzaApp

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    REGION: ${self:provider.region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:sendMessage
          Resource:
            Fn::GetAtt: [PendingOrderQueue, Arn]
        - Effect: Allow
          Action:
            - sqs:sendMessage
          Resource:
            Fn::GetAtt: [OrdersToSendQueue, Arn]
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource:
            Fn::GetAtt: [OrdersTable, Arn]

functions:
  newOrder:
    handler: handler.newOrder
    environment:
      PENDING_ORDERS_QUEUE: 
        Ref: PendingOrderQueue
      ORDERS_TABLE: 
        Ref: OrdersTable
    events:
      - httpApi:
          path: /order
          method: post
  getOrder:
    handler: handler.getOrder
    environment:
      ORDERS_TABLE: 
        Ref: OrdersTable
    events:
      - httpApi:
          path: /order/{orderId}
          method: get
  prepOrder: 
    handler: handler.prepOrder
    environment:
      ORDERS_TABLE: 
        Ref: OrdersTable
    events:
      - sqs:
          arn: 
            Fn::GetAtt: [PendingOrderQueue, Arn]
          batchSize: 1
  sendOrder:
    handler: handler.sendOrder
    environment:
      ORDERS_TO_SEND_QUEUE: 
        Ref: OrdersToSendQueue
    events:
      - stream:
          type: dynamodb
          arn: 
            Fn::GetAtt: [OrdersTable, StreamArn]
          filterPatterns:
            - eventName: [MODIFY]
          batchSize: 1

resources: # Cloudformation template syntax
  Resources:
    PendingOrderQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: pendingOrderQueue
    OrdersToSendQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ordersToSendQueue
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Orders
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES